/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class OpenFPM3D */

#ifndef _Included_OpenFPM3D
#define _Included_OpenFPM3D
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     OpenFPM3D
 * Method:    echo
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_OpenFPM3D_echo
  (JNIEnv *, jclass, jstring);

/*
 * Class:     OpenFPM3D
 * Method:    setDT
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_OpenFPM3D_setDT
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     OpenFPM3D
 * Method:    setNeighborhoodRadius
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_OpenFPM3D_setNeighborhoodRadius
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     OpenFPM3D
 * Method:    setBoundaryWidth
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_OpenFPM3D_setBoundaryWidth
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     OpenFPM3D
 * Method:    setBoundaryHeight
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_OpenFPM3D_setBoundaryHeight
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     OpenFPM3D
 * Method:    setBoundaryDepth
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_OpenFPM3D_setBoundaryDepth
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     OpenFPM3D
 * Method:    setBoundaryConditionX
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_OpenFPM3D_setBoundaryConditionX
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     OpenFPM3D
 * Method:    setBoundaryConditionY
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_OpenFPM3D_setBoundaryConditionY
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     OpenFPM3D
 * Method:    setBoundaryConditionZ
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_OpenFPM3D_setBoundaryConditionZ
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     OpenFPM3D
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_OpenFPM3D_init
  (JNIEnv *, jclass);

/*
 * Class:     OpenFPM3D
 * Method:    initBoundary
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_OpenFPM3D_initBoundary
  (JNIEnv *, jclass);

/*
 * Class:     OpenFPM3D
 * Method:    addParticle
 * Signature: ([DLjava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_OpenFPM3D_addParticle
  (JNIEnv *, jclass, jdoubleArray, jobject);

/*
 * Class:     OpenFPM3D
 * Method:    map
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_OpenFPM3D_map
  (JNIEnv *, jclass);

/*
 * Class:     OpenFPM3D
 * Method:    updateCellList
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_OpenFPM3D_updateCellList
  (JNIEnv *, jclass);

/*
 * Class:     OpenFPM3D
 * Method:    getParticlePosition
 * Signature: (I)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_OpenFPM3D_getParticlePosition
  (JNIEnv *, jclass, jint);

/*
 * Class:     OpenFPM3D
 * Method:    getParticleState
 * Signature: (I)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_OpenFPM3D_getParticleState
  (JNIEnv *, jclass, jint);

/*
 * Class:     OpenFPM3D
 * Method:    getParticleNeighbors
 * Signature: (I)[I
 */
JNIEXPORT jintArray JNICALL Java_OpenFPM3D_getParticleNeighbors
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
